version: '3' 

networks:
  traefik-public:
    external: true

volumes:
  # Create a volume to store database
  resters_database:

services:
  resters:
    image: scaamanho/resters-dummy-run:latest
    volumes:
      - resters_database:/database
    networks:
      - traefik-public
#ENABLE POSTGRES DB
#    enviroment:
#      DB_DIALECT: org.hibernate.dialect.PostgreSQLDialect
#      DB_DRIVER_CLASSNAME: org.postgresql.Driver
#      DB_URL: jdbc:postgresql://postgres.example.com:5432/rester
#      DB_USR: postgres
#      DB_PWD: postgres

#ENABLE H2 DB [DEFAULT]
    enviroment:
      DB_DIALECT: org.hibernate.dialect.H2Dialect
      DB_DRIVER_CLASSNAME: org.h2.Driver
      DB_URL: jdbc:h2:file:/database/resters-dummy-run
      DB_USR: sa
      DB_PWD:

    logging:
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.2'
          memory: 250M      
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      labels: 
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.resters-http.rule=Host(`resters.${DOMAIN:-example.com}`)
        - traefik.http.routers.resters-http.entrypoints=http
        - traefik.http.routers.resters-http.middlewares=https-redirect
        - traefik.http.routers.resters-https.rule=Host(`resters.${DOMAIN:-example.com}`)
        - traefik.http.routers.resters-https.entrypoints=https
        - traefik.http.routers.resters-https.tls=true
        - traefik.http.routers.resters-https.tls.certresolver=le
        - traefik.http.services.resters.loadbalancer.server.port=8080